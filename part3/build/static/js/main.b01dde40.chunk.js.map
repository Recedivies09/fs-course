{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/API.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","onChange","PersonForm","handleOnSubmit","handleOnClick","handleNewName","handleNewNumber","newName","newNumber","onSubmit","value","type","onClick","baseUrl","API","getAllPerson","axios","get","then","response","data","catch","error","console","log","createPerson","newObj","post","deletePerson","id","delete","updatePerson","person","put","Persons","map","name","number","window","confirm","handleDelete","Notification","errorMessage","successMessage","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setErrorMessage","setSuccessMessage","useEffect","initialPhoneBook","e","target","newPersons","toLowerCase","includes","preventDefault","ok","forEach","samePerson","updatedPerson","setTimeout","newPhoneBook","ReactDOM","render","document","getElementById"],"mappings":"6LAWeA,EATA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,kDAEE,uBAAOC,SAAUD,QCmBRE,EAvBI,SAAC,GAOb,IANLC,EAMI,EANJA,eACAC,EAKI,EALJA,cACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAEA,OACE,uBAAMC,SAAUN,EAAhB,UACE,yCACQ,uBAAOF,SAAUI,EAAeK,MAAOH,OAE/C,2CACU,uBAAON,SAAUK,EAAiBI,MAAOF,OAEnD,wBAAQG,KAAK,SAASC,QAASR,EAA/B,qB,gBCjBAS,EAAU,eAiCDC,EAPH,CACVC,aAzBmB,WAEnB,OADgBC,IAAMC,IAAIJ,GAEvBK,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAsBhCG,aAnBmB,SAACC,GAEpB,OADgBV,IAAMW,KAAKd,EAASa,GACrBR,MAAK,SAACC,GAAD,OAAcA,EAASC,SAkB3CQ,aAfmB,SAACC,GAEpB,OADgBb,IAAMc,OAAN,UAAgBjB,EAAhB,YAA2BgB,IAExCX,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAYhCS,aATmB,SAACC,EAAQH,GAE5B,OADgBb,IAAMiB,IAAN,UAAapB,EAAb,YAAwBgB,GAAMG,GAC/Bd,MAAK,SAACC,GAAD,OAAcA,EAASC,UCC9Bc,EAtBC,SAAC,GAAgB,IAAdlC,EAAa,EAAbA,OAQjB,OACE,6BACGA,EAAOmC,KAAI,SAACH,GACX,OACE,+BACGA,EAAOI,KADV,IACiBJ,EAAOK,OAAQ,IAC9B,wBAAQzB,QAAS,kBAbN,SAACoB,GACLM,OAAOC,QAAP,iBAAyBP,EAAOI,KAAhC,QAEbtB,EAAIc,aAAaI,EAAOH,IAUKW,CAAaR,IAApC,sBAFOA,EAAOH,UCFXY,EAXM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACpC,OAAqB,OAAjBD,GAA4C,OAAnBC,EACpB,KAGP,qBAAKC,UAA4B,OAAjBF,EAAwB,UAAY,QAApD,SACoB,OAAjBA,EAAwBC,EAAiBD,KCqIjCG,EAtIH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOvC,EAAP,KAAgB0C,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOtC,EAAP,KAAkB0C,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAO9C,EAAP,KAAemD,EAAf,KACA,EAAwCL,mBAAS,MAAjD,mBAAOJ,EAAP,KAAqBU,EAArB,KACA,EAA4CN,mBAAS,MAArD,mBAAOH,EAAP,KAAuBU,EAAvB,KAEAC,qBAAU,WACRxC,EAAIC,eAAeG,MAAK,SAACqC,GACvBJ,EAAUI,GACVP,EAAWO,QAEZ,IA4FH,OACE,gCACE,2CAEA,cAAC,EAAD,CACEb,aAAcA,EACdC,eAAgBA,IAGlB,cAAC,EAAD,CAAQ3C,OArBS,SAACwD,GACpB,IAAM9C,EAAQ8C,EAAEC,OAAO/C,MACvB,GAAIA,EAAO,CACT,IAAMgD,EAAaX,EAAQ/C,QAAO,SAACgC,GACjC,OAAOA,EAAOI,KAAKuB,cAAcC,SAASlD,EAAMiD,kBAElDR,EAAUO,QAEVP,EAAUJ,MAeV,2CAEA,cAAC,EAAD,CACE5C,eAtCiB,SAACqD,GACtBA,EAAEK,kBAsCEzD,cAzGgB,WACpB,IAAI0D,EAAK,EAwCT,GAvCAf,EAAQgB,SAAQ,SAAC/B,GACf,GAAIA,EAAOI,OAAS7B,IAClBuD,EAAK,EACUxB,OAAOC,QAAP,UACVhC,EADU,8EAGH,CACV,IAAMyD,EAAa,CACjB5B,KAAMJ,EAAOI,KACbC,OAAQ7B,GAEVM,EAAIiB,aAAaiC,EAAYhC,EAAOH,IACjCX,MAAK,SAAC+C,GACLZ,EAAkB,GAAD,OACZrB,EAAOI,KADK,oCAC2BJ,EAAOK,OADlC,eAC+C7B,IAEhE0D,YAAW,WACTb,EAAkB,QACjB,KACHL,EACED,EAAQZ,KAAI,SAACJ,GAAD,OACVA,EAAaF,KAAOG,EAAOH,GAAGA,GAC1BE,EACAkC,SAIT5C,OAAM,SAACC,GACN8B,EAAgB,GAAD,OAAI9B,EAAMH,SAASC,KAAKE,QAIvC4C,YAAW,WACTd,EAAgB,QACf,YAKTU,EAAI,CACNT,EAAkB,SAAD,OAAU9C,IAC3B2D,YAAW,WACTd,EAAgB,QACf,KACH,IAAMe,EAAe,CACnB/B,KAAM7B,EACN8B,OAAQ7B,GAEVM,EAAIW,aAAa0C,GACdjD,MAAK,SAACc,GAAD,OAAYgB,EAAW,GAAD,mBAAKD,GAAL,CAAcf,QACzCX,OAAM,SAACC,GACF8B,EAAgB,GAAD,OAAI9B,EAAMH,SAASC,KAAKE,QAIvC4C,YAAW,WACTd,EAAgB,QACf,QAGbH,EAAW,IACXC,EAAa,KA2CT7C,cApCgB,SAACmD,GACrBP,EAAWO,EAAEC,OAAO/C,QAoChBJ,gBAjCkB,SAACkD,GACvBN,EAAaM,EAAEC,OAAO/C,QAiClBH,QAASA,EACTC,UAAWA,IAGb,yCAEA,cAAC,EAAD,CAASR,OAAQA,QCnIvBoE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b01dde40.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filter }) => {\n  return (\n    <p>\n      filter shown with\n      <input onChange={filter} />\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  handleOnSubmit,\n  handleOnClick,\n  handleNewName,\n  handleNewNumber,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <div>\n        Name: <input onChange={handleNewName} value={newName} />\n      </div>\n      <div>\n        Number: <input onChange={handleNewNumber} value={newNumber} />\n      </div>\n      <button type=\"submit\" onClick={handleOnClick}>\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAllPerson = () => {\n  const request = axios.get(baseUrl);\n  return request\n    .then((response) => response.data)\n    .catch((error) => console.log(error));\n};\n\nconst createPerson = (newObj) => {\n  const request = axios.post(baseUrl, newObj);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request\n    .then((response) => response.data)\n    .catch((error) => console.log(error));\n};\n\nconst updatePerson = (person, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, person);\n  return request.then((response) => response.data);\n};\n\nconst API = {\n  getAllPerson,\n  createPerson,\n  deletePerson,\n  updatePerson,\n};\n\nexport default API;\n","import React from \"react\";\nimport API from \"../services/API\";\n\nconst Persons = ({ filter }) => {\n  const handleDelete = (person) => {\n    const result = window.confirm(`Delete ${person.name} ?`);\n    if (result) {\n      API.deletePerson(person.id);\n    }\n  };\n\n  return (\n    <ul>\n      {filter.map((person) => {\n        return (\n          <li key={person.id}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => handleDelete(person)}>Delete</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ errorMessage, successMessage }) => {\n  if (errorMessage === null && successMessage === null) {\n    return null;\n  }\n  return (\n    <div className={errorMessage === null ? \"success\" : \"error\"}>\n      {errorMessage === null ? successMessage : errorMessage}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport API from \"./services/API\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    API.getAllPerson().then((initialPhoneBook) => {\n      setFilter(initialPhoneBook);\n      setPersons(initialPhoneBook);\n    });\n  }, []);\n\n  const handleOnClick = () => {\n    let ok = 1;\n    persons.forEach((person) => {\n      if (person.name === newName) {\n        ok = 0;\n        const result = window.confirm(\n          `${newName} is already added to phonebook, replace the old number with the new one?`\n        );\n        if (result) {\n          const samePerson = {\n            name: person.name,\n            number: newNumber,\n          };\n          API.updatePerson(samePerson, person.id)\n            .then((updatedPerson) => {\n              setSuccessMessage(\n                `${person.name} old number changed from ${person.number} to ${newNumber}`\n              );\n              setTimeout(() => {\n                setSuccessMessage(null);\n              }, 5000);\n              setPersons(\n                persons.map((updatePerson) =>\n                  updatePerson.id !== person.id.id\n                    ? updatePerson\n                    : updatedPerson\n                )\n              );\n            })\n            .catch((error) => {\n              setErrorMessage(`${error.response.data.error}`);\n//              setErrorMessage(\n//                `Information of ${person.name} has already been removed from server.`\n//              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            });\n        }\n      }\n    });\n    if (ok) {\n      setSuccessMessage(`Added ${newName}`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      const newPhoneBook = {\n        name: newName,\n        number: newNumber,\n      };\n      API.createPerson(newPhoneBook)\n        .then((person) => setPersons([...persons, person]))\n        .catch((error) => {\n              setErrorMessage(`${error.response.data.error}`);\n//              setErrorMessage(\n//                `Information of ${person.name} has already been removed from server.`\n//              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n    });\t\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleNewName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNewNumber = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilter = (e) => {\n    const value = e.target.value;\n    if (value) {\n      const newPersons = persons.filter((person) => {\n        return person.name.toLowerCase().includes(value.toLowerCase());\n      });\n      setFilter(newPersons);\n    } else {\n      setFilter(persons);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n\n      <Filter filter={handleFilter} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        handleOnSubmit={handleOnSubmit}\n        handleOnClick={handleOnClick}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons filter={filter} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}